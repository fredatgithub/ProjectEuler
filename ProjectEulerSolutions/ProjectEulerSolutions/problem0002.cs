using ConceptualMath.Numbers;
using ConceptualMath.Sequence;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Linq;
using System.Numerics;

namespace ProjectEulerSolutions
{
    [TestClass]
    public class problem0002
    {
        /*
        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        */

        private BigInteger Answer => 4613732;

        [TestMethod]
        public void SumOfFibonacci_WithValuesLE89_IsSomething()
        {
            var expected = new int[]
            {
                1, 2, 3, 5, 8, 13, 21, 34, 55, 89
            }.Sum();

            var actual = new FibonacciNumbers()
                .TakeWhile(fib => fib.Value <= 89)
                .Select(n => n.Value)
                .Sum();

            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void SumOfFibonacci_WithValuesLE4Million_Is4613732()
        {
            var actual = new FibonacciNumbers()
            .TakeWhile(fib => fib.Value <= 4000000)
            .Select(n => n.Value)
            .Where(v => v % 2 == 0)
            .Sum();

            Assert.AreEqual(Answer, actual);
        }
    }
}
