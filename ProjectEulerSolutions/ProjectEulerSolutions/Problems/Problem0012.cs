using ConceptualMath.Numbers.Generation;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;
using System.Numerics;


namespace ProjectEulerSolutions
{
    [TestClass]
    public class Problem0012
    {
        /*The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

            1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

            Let us list the factors of the first seven triangle numbers:

             1: 1
             3: 1,3
             6: 1,2,3,6
            10: 1,2,5,10
            15: 1,3,5,15
            21: 1,3,7,21
            28: 1,2,4,7,14,28
            We can see that 28 is the first triangle number to have over five divisors.

            What is the value of the first triangle number to have over five hundred divisors?
        */

        [TestMethod]
        public void FirstTriangleNumberToHaveMoreThan5Divisors_Is28()
        {
            var answer = Sequences.TriangleNumbers()
                            .First(number => number.GetDivisors().Count() > 5);

            Assert.AreEqual(28, answer);
        }

        [TestMethod]
        public void FirstTriangleNumberToHaveMoreThan500Divisors_Is76576500()
        {
            var answer = Sequences.TriangleNumbers()
                            .First(number => number.GetDivisors().Count() > 500);

            Assert.AreEqual(76576500, answer);
        }
    }
}
